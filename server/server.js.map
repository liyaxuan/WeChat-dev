{"version":3,"sources":["server.es6.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["let crypto = require('crypto');\r\n\r\nlet express = require('express');\r\nlet cookieParser = require('cookie-parser');\r\nlet bodyParser = require('body-parser');\r\nlet multer = require('multer');\r\nlet xlsx = require('node-xlsx');\r\n\r\nlet app = express();\r\n\r\napp.use(express.static('../static'));\r\napp.use(express.static('../upload'));\r\napp.use(cookieParser());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\n\r\napp.listen(80);\r\n\r\nlet storage = multer.diskStorage({\r\n\tdestination: function (req, file, cb) {\r\n\t\tcb(null, '../upload')\r\n\t},\r\n\tfilename: function (req, file, cb) {\r\n\t\tcb(null, req.query.name + req.query.numero + '.xlsx');\r\n\t}\r\n});\r\n\r\nlet upload = multer({ storage: storage });\r\n\r\nimport { wechat } from './wechat';\r\nimport { mongo, mongoErrHandler } from './mongo';\r\nimport { teacher } from './admin';\r\nimport { lesson } from './lesson';\r\n\r\nwechat(app);\r\n\r\napp.route('/teacher').get((req, res) => {\r\n\treq.query.tid ? teacher.getOne(req, res) : teacher.getAll(req, res);\r\n}).post((req, res) => {\r\n\tteacher.postOne(req, res);\r\n}).put((req, res) => {\r\n\tteacher.putOne(req, res);\r\n});\r\n\r\napp.route('/lesson').get((req, res) => {\r\n\r\n}).post((req, res) => {\r\n\tlesson.postOne(req, res);\r\n}).put((req, res) => {\r\n\tlesson.selectOne(req, res);\r\n});\r\n\r\n/*\r\n\tE00: 登录失败, 教工号存在, 密码错误\r\n\tE01: 登录失败, 教工号不存在\r\n\tE02: 注册失败, 教工号已经注册\r\n\tE03: 更新教师信息失败, 没有找到教工号\r\n\tE04: 更新token失败\r\n*/\r\n\r\napp.post('/login', (req, res) => {\r\n\tlet option = req.query.option;\r\n\tlet username = req.body.username;\r\n\tlet password = req.body.password;\r\n\r\n\tlet md5 = crypto.createHash('md5');\r\n\tmd5.update(username + password, 'utf8');\r\n\tlet token = md5.digest('hex');\r\n\r\n\tmongo({\r\n\t\tcol: option,\r\n\t\tmethod: 'find',\r\n\t\tqueryData: option == 'admin' ? { uid: username } : { tid: username }\r\n\t}).then((array) => {\r\n\t\tif(array.length != 0 && array[0].pwd == password) {\r\n\t\t\tres.cookie('token', token);\r\n\t\t\tres.json({ result: 'success' });\r\n\t\t\treturn mongo({\r\n\t\t\t\tcol: 'token',\r\n\t\t\t\tmethod: 'update',\r\n\t\t\t\tqueryData: { username: username },\r\n\t\t\t\tupdateData: { token: token }\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if(array.length != 0 && array[0].pwd != password) {\r\n\t\t\tres.json({ result: 'fail', code: 'E00' });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tres.json({ result: 'fail', code: 'E01' });\r\n\t\t}\t\t\t\t\t\t\r\n\t}, mongoErrHandler(res)).then((doc) => {\r\n\t\tlet result = doc.result;\r\n\t\tconsole.log(result);\r\n\t\tif(result.n >= 1)\r\n\t\t\tres.json({ result: 'success' });\r\n\t\telse\r\n\t\t\tres.json({ result: 'fail', code: 'E04' });\r\n\t}, mongoErrHandler(res));\r\n});\r\n\r\n/*\r\nquery:\r\n\tname: 标识课程名称\r\n\tnumero: 标识教学班号\r\nbody: \r\n\texcle: 文件\r\n*/\r\n\r\napp.post('/lesson/student', upload.single('excel'), (req, res) => {\r\n\tlet excle = xlsx.parse(req.file.path);\r\n\tlet student = excle[0].data.map((item, index, array) => {\r\n\t\tif(item[1] === undefined)\r\n\t\t\titem[1] = array[index - 1][1];\r\n\t\treturn {\r\n\t\t\tclass_name: item[1],\r\n\t\t\tsid: item[2],\r\n\t\t\tname: item[3],\r\n\t\t\tgender: item[4]\r\n\t\t};\r\n\t});\r\n\r\n\tmongo({\r\n\t\tcol: 'lesson',\r\n\t\tmethod: 'update',\r\n\t\tqueryData: {\r\n\t\t\tname: req.query.name,\r\n\t\t\tnumero: req.query.numero\r\n\t\t},\r\n\t\tupdateData: {\r\n\t\t\t$set: { student: student }\r\n\t\t},\r\n\t\tsucc: (doc) => {\r\n\t\t\tif(doc.result.ok >= 1)\r\n\t\t\t\tres.json({ list: student });\r\n\t\t\telse\r\n\t\t\t\tres.json({ list: [] });\r\n\t\t}\r\n\t});\r\n});\r\n\r\n/*\r\nquery:\r\n\ttid: 标识教师\r\nbody:\r\n\tname: 标识课程名称\r\n\tnumero: 标识教学班号\r\n\r\n如果这条状态记录不存在, 则添加时间信息, 插入这条新记录;\r\n如果这条状态记录已存在, 则更新时间信息, 更新这条旧记录\r\n*/\r\n\r\napp.post('/lesson/start', (req, res) => {\r\n\tlet data = {\r\n\t\ttid: req.query.tid,\r\n\t\tname: req.body.name,\r\n\t\tnumero: req.body.numero\r\n\t};\r\n\r\n\tmongo({\r\n\t\tcol: 'status',\r\n\t\tmethod: 'find',\r\n\t\tqueryData: data,\r\n\t\tsucc: (doc) => {\r\n\t\t\tif(doc.length == 0) {\r\n\t\t\t\tdata.date = new Date();\r\n\r\n\t\t\t\tmongo({\r\n\t\t\t\t\tcol: 'status',\r\n\t\t\t\t\tmethod: 'insert',\r\n\t\t\t\t\tupdateData: data,\r\n\t\t\t\t\tsucc: (doc) => {\r\n\t\t\t\t\t\tres.json({ result: 'success' });\r\n\t\t\t\t\t}\r\n\t\t\t\t});\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmongo({\r\n\t\t\t\t\tcol: 'status',\r\n\t\t\t\t\tmethod: 'update',\r\n\t\t\t\t\tqueryData: data,\r\n\t\t\t\t\tupdateData: { date: new Date() },\r\n\t\t\t\t\tsucc: (doc) => {\r\n\t\t\t\t\t\tres.json({ result: 'fail' });\r\n\t\t\t\t\t}\r\n\t\t\t\t});\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\r\n/*\r\nquery:\r\n\ttid: 标识教师\r\n\ttype: register, sign, single, double, text\r\n\toperation: start, stop\r\nbody: \r\n\tstem: 题干\r\n\toption: { Array } 选项\r\n*/\r\n\r\napp.post('/lesson/interact', (req, res) => {\r\n\tconsole.log('233');\r\n\tfor(var x in req.body)\r\n\t\tconsole.log(x);\r\n\tres.end();\r\n\t// let data = {\r\n\t// \ttid: req.query.tid,\r\n\t// \ttype: req.query.name\r\n\t// };\r\n\r\n\t// mongo({\r\n\t// \tcol: 'status',\r\n\t// \tmethod: 'update',\r\n\t// \tqueryData: { tid: req.query.tid },\r\n\t// \tupdateData: { date: new Date() }\r\n\t// \tsucc: (doc) => {\r\n\t// \t\tres.json({ result: 'success' });\r\n\t// \t}\r\n\t// });\r\n});\r\n\r\napp.post('/lesson/stop', (req, res) => {\r\n\tlet data = {\r\n\t\ttid: req.query.tid,\r\n\t\tname: req.body.name,\r\n\t\tnumero: req.body.numero\r\n\t};\r\n\t\r\n\tmongo({\r\n\t\tcol: 'status',\r\n\t\tmethod: 'remove',\r\n\t\tqueryData: data,\r\n\t\tsucc: (doc) => {\r\n\t\t\tres.json({ result: 'success' });\r\n\t\t}\r\n\t});\t\r\n})"],"sourceRoot":"/source/"}